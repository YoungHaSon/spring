<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- view에 대한 설정! nameSpace에 mvc를 추가 해준다! converting역할?도 해줌...-->
	<mvc:annotation-driven/>
	
	<mvc:default-servlet-handler/>

	<!-- 복수개의 viewResolver를 사용할 경우 우선순위를 가장 늦게 배정
		viewName이 유효한지(존재하는지)와 관계 없이 무조건 처리 -->
		
	<!-- jsp를 처리하기 위해서  InternalResourceViewResolver를 사용한다 -->
	<!-- 기본적으로 forward 개념! -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/> <!-- 접두 -->
		<property name="suffix" value=".jsp"/> <!-- 접미 -->
		<property name="order" value="3"/>
	</bean>	
	
	<!-- controller에서 리턴하는 view이름과 동일한 spring bean이 존재하면 해당 view에게 위임함 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="2"/>
	</bean>	
	
	<!-- tiles view resolver -->
	<!-- 설정 파일을 읽어주는! -->
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>classpath:kr/or/ddit/config/tiles/tiles-config.xml</value>
			</list>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
		<property name="order" value="1"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>
	<!-- 
		ex) controller.method가 "user/user"라고 viewName을 리턴
		1. 우선순위에 따라 tilesViewResolver가 "user/user"와 동일한 tiles definition이 있는지 확인 : 없음!? -> 다음 viewResolver
			2순위 우선순위에 따라 beanNameViewResolver가 "user/user"과 동일한 spring bean이 있는지 확인 : 없음 확인
		2. 후순 우선순위에 따라 internalResourceViewResolver가 prefix + "user/user" + suffix로 forward
		
		ex) controller.method가 "jsonView"라고 viewName을 리턴
		1. 우선순위에 따라 beanNameViewResolver가 "jsonView"과 동일한 spring bean이 있는지 확인 : 확인 있음!
		2. 후순 SpringBean(View)에게 응답을 생성하도록 요청
		
		ex) controller.method가 "profileView"라고 viewName을 리턴
		1. 우선순위에 따라 beanNameViewResolver가 "profileView"과 동일한 spring bean이 있는지 확인 : 확인 있음!
		2. 후순 SpringBean(View)에게 응답을 생성하도록 요청
		
		ex) controller.method가 "main"이라는 viewName을 리턴
		1. 우선순위에 따라 tileViewRessolver가 tiles 설정 파일에서 "main"이라는 이름으로 definition이 있는지 확인 :  있음!
		2. tiles 설정에 의해 layout.jsp를 template으로 body영역만 main.jsp로 대체하여 응답을 생성
	-->
	
	<!-- controller에서 model 객체에 넣은 속성을 이용하여 json으로 만들어주는view? 응답을 보낸다 jsp로 !-->
	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>
	
	<!-- profile 이미지를 처리해주는 View -->
	<bean id="profileView" class="kr.or.ddit.view.ProfileView"/>
	
	<!-- 사용자 엑셀 정보를 처리해주는 View -->
	<bean id="userExcelView" class="kr.or.ddit.view.ExcelDownloadView"></bean>	
	
	<!-- multipartResolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSizePerFile" value="3145728"/> <!-- 파일용량 -->
		<property name="maxUploadSize" value="15728640"/> <!-- 파일개수 -->
	</bean>
	
	<!-- messageSource 등록 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:kr/or/ddit/msg/error</value>
				<value>classpath:kr/or/ddit/msg/msg</value> 
			</list>
		</property>
	</bean>
	
	<!-- 빈 이름 고정!!!! localeResolver  우리는 session에 저장 하겠다! -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>
		
	
	
</beans>
