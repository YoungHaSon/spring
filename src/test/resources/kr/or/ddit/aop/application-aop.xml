<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- 공통의 관심 사항 -->
	<bean id="loggingAspect" class="kr.or.ddit.aop.LoggingAspect" />
	
	<!-- 공통의 관심 사항 : profilingAspect -service 클래스의 메서드들이 실행될때 메서드의 실행 시간을 구한다. -->
	<bean id="profilingAspect" class="kr.or.ddit.aop.profilingAspect"/>
	
	<!-- @Controller, @Service, @Repository, @Component 4가지 @가 붙은 클래스를 스프링 빈으로 등록 -->
	<context:component-scan base-package="kr.or.ddit"/>
	<context:annotation-config/>

	<!-- 설정 aop:config -->
	<aop:config>
		<!-- 모든 서비스 메서드에 대해 loggingAspect를 적용하고자 한다. 서비스 메소드 *ServiceImpl.java -->

		<!-- kr.or.ddit.user.service -->
		<!-- kr.or.ddit.board.service -->
		<!-- kr.or.ddit.board.manager.service -->
	
<!-- kr.or.ddit.board.member.service -->  <!-- * ==>메서드 반환타입,  .. ==>하위 패키지가 몇개가 오든 상관없다!, *. => 모든 메서드들 -->
<!-- execution :접근제어자(생략이 가능, Sping public) [public명시] 또는 [생략] 반환 타입 패키지 클래스 메소드 매소드 인자 -->

						<!-- service 패키지 안에 모든 메서드를 대상으로 (표현방법만 다르고 뜻은 같다) -->
<!-- 	<aop:pointcut id="target" expression="execution(* kr.or.ddit..service.*.*(..))" /> -->
		<aop:pointcut id="target" expression="within(kr.or.ddit..service.*)"/>
		
		<!-- 적용하려는 bean의 id! -->
		<aop:aspect ref="loggingAspect">
			<!-- loggingAspect의 메서드가 실행되기 전에 before method를 먼저 실행 시키겠다? -->
			<aop:before pointcut-ref="target" method="before"/>
			<aop:after pointcut-ref="target" method="after"/>
			<aop:around pointcut-ref="target" method="around"/>
		</aop:aspect>
		
		<aop:aspect ref="profilingAspect">
			<aop:around pointcut-ref="target" method="around"/>
		</aop:aspect>
		
	</aop:config>

</beans>
