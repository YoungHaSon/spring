<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- @Controller, @Service, @Repository, @Component 4가지 @가 붙은 클래스를 스프링 빈으로 등록되어있는데 @Aspect도 추가하는 방법 -->
	<context:component-scan base-package="kr.or.ddit.board"/>
	
	<context:component-scan base-package="kr.or.ddit.aop">
		<context:include-filter type="annotation" expression="org.aspectj.lang.annotation.Aspect"/>
	</context:component-scan>
	
<!-- 	<bean id="boardService" class="kr.or.ddit.board.service.BoardService"/> -->
<!-- 	<bean id="boardDao" class="kr.or.ddit.board.dao.BoardDao"/> -->
<!-- 	<bean id="profilingAspect" class="kr.or.ddit.aop.profilingAspect"/> -->
	
	<!-- @Aspect 어노테이션이 적용된 빈을 Aspect로 사용할 수 있게 해준다 -->
	<!-- AspectJ를 사용해서 같은 클래스내에도 새로운 트랜잭션 만들기?? -->
	<aop:aspectj-autoproxy/>
	
	<!-- 빈 주입 처리 : scan 방식에서는 없어도 된다? scan에서 다 처리함? (component때매!!) -->
	<context:annotation-config/>
	
</beans>
